import{_ as p,C as r,c as h,o,j as i,a as t,aA as n,G as e,w as l}from"./chunks/framework.BBFU6q_T.js";const b=JSON.parse('{"title":"Package Internals","description":"","frontmatter":{},"headers":[],"relativePath":"lib/internals.md","filePath":"lib/internals.md","lastUpdated":null}'),k={name:"lib/internals.md"},d={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""};function u(c,s,E,y,m,_){const a=r("Badge");return o(),h("div",null,[s[8]||(s[8]=i("h1",{id:"Package-Internals",tabindex:"-1"},[t("Package Internals "),i("a",{class:"header-anchor",href:"#Package-Internals","aria-label":'Permalink to "Package Internals {#Package-Internals}"'},"​")],-1)),s[9]||(s[9]=i("h2",{id:"BazerUtils-Module",tabindex:"-1"},[i("code",null,"BazerUtils"),t(" Module "),i("a",{class:"header-anchor",href:"#BazerUtils-Module","aria-label":'Permalink to "`BazerUtils` Module {#BazerUtils-Module}"'},"​")],-1)),i("details",d,[i("summary",null,[s[0]||(s[0]=i("a",{id:"BazerUtils.reformat_msg-Tuple{Any}",href:"#BazerUtils.reformat_msg-Tuple{Any}"},[i("span",{class:"jlbinding"},"BazerUtils.reformat_msg")],-1)),s[1]||(s[1]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[3]||(s[3]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">reformat_msg</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># we view strings as simple and everything else as complex</span></span></code></pre></div>`,1)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[2]||(s[2]=[i("a",{href:"https://github.com/LouLouLibs/BazerUtils.jl/blob/fdf0d2faaa8ab1e2b0b3cf604433a205f9db8a77/src/CustomLogger.jl#L362-L365",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[2]})]),i("details",g,[i("summary",null,[s[4]||(s[4]=i("a",{id:"BazerUtils.shorten_path_str-Tuple{AbstractString}",href:"#BazerUtils.shorten_path_str-Tuple{AbstractString}"},[i("span",{class:"jlbinding"},"BazerUtils.shorten_path_str")],-1)),s[5]||(s[5]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[7]||(s[7]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">shorten_path_str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; max_length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, strategy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:truncate_middle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Shorten a file path string to a specified maximum length using various strategies.</p><p><strong>Arguments</strong></p><ul><li><p><code>path::AbstractString</code>: The input path to be shortened</p></li><li><p><code>max_length::Int=40</code>: Maximum desired length of the output path</p></li><li><p><code>strategy::Symbol=:truncate_middle</code>: Strategy to use for shortening. Options:</p><ul><li><p><code>:no</code>: Return path unchanged</p></li><li><p><code>:truncate_middle</code>: Truncate middle of path components while preserving start/end</p></li><li><p><code>:truncate_to_last</code>: Keep only the last n components of the path</p></li><li><p><code>:truncate_from_right</code>: Progressively remove characters from right side of components</p></li><li><p><code>:truncate_to_unique</code>: Reduce components to unique prefixes</p></li></ul></li></ul><p><strong>Returns</strong></p><ul><li><code>String</code>: The shortened path</li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Using different strategies</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> shorten_path_str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/very/long/path/to/file.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, max_length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/very/…/path/to/file.txt&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> shorten_path_str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/usr/local/bin/program&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, strategy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:truncate_to_last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, max_length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/bin/program&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> shorten_path_str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/user/documents/very_long_filename.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, strategy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:truncate_middle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/user/doc…ents/very_…name.txt&quot;</span></span></code></pre></div>`,8)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[6]||(s[6]=[i("a",{href:"https://github.com/LouLouLibs/BazerUtils.jl/blob/fdf0d2faaa8ab1e2b0b3cf604433a205f9db8a77/src/CustomLogger.jl#L511-L541",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[6]})])])}const f=p(k,[["render",u]]);export{b as __pageData,f as default};
